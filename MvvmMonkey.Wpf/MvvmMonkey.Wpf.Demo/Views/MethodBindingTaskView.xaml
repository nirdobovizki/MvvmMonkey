<UserControl x:Class="NirDobovizki.MvvmMonkey.Wpf.Demo.Views.MethodBindingTaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="17">Use method binding with tasks and the control will be disabled until the task completes</TextBlock>
        <Grid Grid.Row="1" Margin="20" Grid.ColumnSpan="2">
            <Button MaxWidth="100" HorizontalAlignment="Stretch" Command="{Binding CallDelay}">Call Delay</Button>
        </Grid>
        <UniformGrid Rows="1" Grid.Row="2" Grid.ColumnSpan="2">
            <TextBox Name="paramBox"/>
            <CheckBox Content="Can execute" IsChecked="{Binding CanDoSomethingParam}"/>
            <Button Command="{Binding DoSomethingParam}" CommandParameter="{Binding Text,ElementName=paramBox}" Content="Do something"/>
        </UniformGrid>

        <Border Padding="3" BorderThickness="1" BorderBrush="Gray" Grid.Row="3">
            <TextBlock >View Model</TextBlock>
        </Border>
        <Border Padding="3" BorderThickness="1" BorderBrush="Gray" Grid.Row="3" Grid.Column="1">
            <TextBlock >View</TextBlock>
        </Border>
        <Border Padding="3" BorderThickness="1" BorderBrush="Gray" Grid.Row="4" >
            <TextBlock TextWrapping="Wrap" FontFamily="Consolas" xml:space="preserve">
<Run Foreground="red">[TypeDescriptionProvider(typeof(MethodBinding))]</Run>
class MethodBindingTaskViewModel
{
    public Task CallDelay()
    {
        return Task.Delay(2000);
    }
}
            </TextBlock>
        </Border>
        <Border Padding="3" BorderThickness="1" BorderBrush="Gray" Grid.Row="4" Grid.Column="1" >
            <TextBlock TextWrapping="Wrap" FontFamily="Consolas" xml:space="preserve">
&lt;Button Command="<Run Foreground="red">{Binding CallDelay}</Run>"&gt;Call Delay&lt;/Button&gt;
            </TextBlock>
        </Border>
    </Grid>
</UserControl>
